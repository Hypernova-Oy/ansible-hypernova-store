---
- name: get the username running the deploy
  local_action: command whoami
  become: no
  register: username_on_the_host
  delegate_to: 127.0.0.1
  run_once: True

- name: create directory if they don't exist
  become: no
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - ~/ansible_installation_reports
  delegate_to: 127.0.0.1
  run_once: True

- name: Generate four random char to secure new user name
  become: no
  shell: makepasswd --chars=4
  register: user_fourword
  delegate_to: 127.0.0.1
  run_once: True
  no_log: True

- name: Set new username globally
  set_fact: new_user_name_global="{{new_user_name}}{{user_fourword.stdout}}"
  run_once: True

- name: Generate SSH keys
  become: no
  delegate_to: 127.0.0.1
  shell: ssh-keygen -t rsa -b 4096 -C "{{new_user_name_global}}@ansible" -f ~/ansible_installation_reports/{{ new_user_name_global }}_id_rsa -q -N ""
  run_once: True

- name: Generate password for new user
  become: no
  shell: makepasswd --chars=20
  register: user_password
  delegate_to: 127.0.0.1
  run_once: True
  no_log: true

- name: Generate encrypted password
  shell: mkpasswd --method=SHA-512 "{{ user_password.stdout }}"
  register: encrypted_user_password
  delegate_to: 127.0.0.1
  run_once: True
  no_log: true

- name: Checks if this user exists
  getent:
    database: passwd
    key: "{{ new_user_name_global }}"
    fail_key: no

- name: Determine available groups
  getent:
    database: group
    #key: ssh
    fail_key: no

- name: Ensure group ssh exists
  group:
    name: sshaccess
    state: present
  when: (ansible_facts['getent_group'] != "sshaccess")
  
- name: Create user account
  user:
    name: "{{ new_user_name_global }}"
    password: "{{ encrypted_user_password.stdout }}"
    comment: John Ansible
    groups:
      - www-data
      #- docker
      - sudo
      - sshaccess
    state: present
    append: yes
    shell: /bin/bash
    createhome: yes
    #home: /home/"{{ new_user_name_global }}"
    update_password: always
  register: user_created
  no_log: true

- name: Set authorized key took from file
  authorized_key:
    user: "{{ new_user_name_global }}"
    state: present
    key: "{{ lookup('file', '~/ansible_installation_reports/{{ new_user_name_global }}_id_rsa.pub') }}"

- name: Save name and password to file
  become: no
  template: 
    src: users-name.j2 
    dest: "~/ansible_installation_reports/{{ new_user_name_global }}-login.log"
  delegate_to: 127.0.0.1
  run_once: True
- debug:
    msg: "Login {{ new_user_name_global }} password {{ user_password.stdout }} key ~/ansible_installation_reports/{{ new_user_name_global }}_id_rsa.pub"
